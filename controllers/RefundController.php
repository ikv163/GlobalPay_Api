<?php

namespace app\controllers;

use app\common\Common;
use app\models\Cashier;
use app\models\Order;
use app\models\Refund;
use Yii;
use yii\filters\VerbFilter;

class RefundController extends \yii\web\Controller
{
    public function init()
    {
        header("Access-Control-Allow-Origin: *");
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    '*' => ['post'],
                ],
            ],
            'selfFilter' => [
                'class' => 'app\components\AccessFilter',
                'only' => ['*'],
            ],
        ];
    }


    public function beforeAction($action)
    {

        $queryParams = \Yii::$app->request->bodyParams;
        $redisUser = array();
        if (isset($queryParams['token']) && $queryParams['token']) {
            if (\Yii::$app->redis->get('User_' . $queryParams['token'])) {
                $redisUser = json_decode(\Yii::$app->redis->get('User_' . $queryParams['token']), true);
            }
        }


        //日志数据
        $logData = array(
            'uri' => \Yii::$app->controller->id . '_' . \Yii::$app->controller->action->id,  //请求的uri
            'query_params' => $queryParams,  //请求参数
            'client_ip' => Common::getClientIp(),  //用户ip
            'redis_user' => $redisUser,  //用户信息，  登录后才有
        );


        \Yii::info(json_encode($logData, 256), 'refund_init_log');


        return parent::beforeAction($action);

    }


    public function actionRefund()
    {
        try {
            Yii::info(json_encode(['data' => $_POST]), 'Refund_Refund_Params');
            $ret = Common::ret();
            $username = \Yii::$app->request->post('username');

            $lockKey = $username . 'Refund';
            $isContinue = Common::redisLock($lockKey, 3);
            if ($isContinue === false) {
                $returnData['result'] = 0;
                $returnData['msg'] = '操作频繁，3秒后再试';
                return $returnData;
            }

            $order_id = \Yii::$app->request->post('order_id');
            $refund_money = \Yii::$app->request->post('refund_money');
            $remark = \Yii::$app->request->post('remark');
            $photo = \Yii::$app->request->post('photo');
            if (!($order_id && $refund_money && $remark)) {
                $ret['msg'] = '请完整填写所有资料';
                return $ret;
            }

            $order = Order::find()->where(['order.order_id' => $order_id])->one();
            Yii::info(json_encode($order), 'Refund_Refund_Order');
            if (!$order) {
                $ret['msg'] = '订单不存在';
                return $ret;
            }
            if (!in_array($order->order_status, [2, 5])) {
                $ret['msg'] = '请先确认订单金额已到账，再回款';
                return $ret;
            }

            //订单记录的收款员和返款人不同，判断是否是直接上级操作的返款
            if ($order->username != $username) {
                $parent = Cashier::find()->where(['username' => $username])->select(['parent_name'])->one();
                Yii::info(json_encode($parent), 'Refund_Refund_Parent');
                if (!$parent || ($parent->parent_name != $username)) {
                    $ret['msg'] = '你无权操作此订单';
                    return $ret;
                }
            }

            $photo = Common::uploadBase64Img($photo);
            if (!$photo) {
                $ret['msg'] = '图片保存失败';
                return $ret;
            }

            $refund = new Refund();
            $refund->order_id = $order_id;
            $refund->photo = $photo;
            $refund->refund_money = $refund_money;
            $refund->remark = $username . '返款：' . $remark;

            if ($refund->save()) {
                $ret['msg'] = '返款信息已提交，即将审核';
                $ret['result'] = 1;
                return $ret;
            } else {
                $ret['msg'] = '返款信息提交失败，请稍后重试或联系平台人员';
                return $ret;
            }
        } catch (\Exception $e) {
            Yii::info($e->getMessage() . '-' . $e->getFile() . '-' . $e->getLine(), 'Refund_Refund_Error');
        }
    }
}